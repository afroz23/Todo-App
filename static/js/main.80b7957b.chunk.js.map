{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","Components/Contact.js","App.js","index.js"],"names":["TodoForm","state","text","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","onSubmit","id","shortid","generate","complete","this","placeholder","onChange","onClick","Component","Todo","className","style","textDecoration","todo","toggleComplete","onDelete","TodoList","todos","todoToShow","toggleAllComplete","addTodo","map","updateTodoToShow","s","handleDeleteTodo","filter","removeAllTodosThatAreComplete","length","some","Contact","rel","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80b7957b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport shortid from 'shortid';\nexport default class TodoForm extends Component {\n    state={\n        text:''\n    }\n    handleChange=event=>{\n        this.setState({\n            [event.target.name]:event.target.value\n        });\n    }\n    handleSubmit=event=>{\n        event.preventDefault();\n        if(this.state.text!==''){\n            this.props.onSubmit({\n                id:shortid.generate(),\n                text:this.state.text,\n                complete:false\n            });\n        }\n        this.setState({\n            text:''\n        });\n    }\n    render() {\n        return (\n            <form id=\"to-do-form\" onSubmit={this.handleSubmit}>\n                <input\n                    name='text'\n                    placeholder=\"todo...\"\n                    value={this.state.text}\n                    onChange={this.handleChange}\n                />\n                <button onClick={this.handleSubmit}>Add todo</button>\n            </form>\n        );\n    }\n}\n","import React from 'react';\nconst Todo= (props)=>(\n    <div className=\"todo\">\n        <div className=\"todo-text\"\n            style={{\n                textDecoration: props.todo.complete?\"line-through\":\"\"\n            }}\n            onClick={props.toggleComplete}\n            >\n            {props.todo.text}\n        </div>\n        <button className=\"delete-todo\" onClick={props.onDelete}>x</button>\n    </div>\n);\nexport default Todo;","import React, { Component } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nexport default class TodoList extends Component {\n    state={\n        todos:[],\n        todoToShow:\"all\",\n        toggleAllComplete:true\n    }\n    addTodo=(todo)=>{\n        this.setState({\n            todos:[todo,...this.state.todos]\n        });\n    }\n    toggleComplete=(id)=>{\n        this.setState({\n            todos:this.state.todos.map(todo=>{\n                if(id===todo.id){\n                    return {\n                        ...todo,\n                        complete:!todo.complete\n                    }               \n                }\n                else{\n                    return todo;\n                }\n            })\n        });\n    }\n    updateTodoToShow=(s)=>{\n        this.setState({\n            todoToShow:s\n        });\n    }\n    handleDeleteTodo=id=>{\n        this.setState({\n            todos:this.state.todos.filter(todo=>todo.id!==id)\n        });\n    }\n    removeAllTodosThatAreComplete=()=>{\n        this.setState({\n            todos:this.state.todos.filter(todo=>!todo.complete)\n        });\n    }\n    \n    render() {\n        let todos=[];\n        if(this.state.todoToShow===\"all\"){\n            todos=this.state.todos;\n        }\n        else if(this.state.todoToShow===\"active\"){\n            todos=this.state.todos.filter(todo=>!todo.complete);\n        }\n        else if(this.state.todoToShow===\"complete\"){\n            todos=this.state.todos.filter(todo=>todo.complete);\n        }\n        return (\n            <div className=\"todo-list\">\n                <div>\n                    <button onClick={()=>{this.updateTodoToShow(\"all\")}}>all</button>\n                    <button onClick={()=>{this.updateTodoToShow(\"active\")}}>active</button>\n                    <button onClick={()=>{this.updateTodoToShow(\"complete\")}}>complete</button>\n                    <button onClick={()=>\n                        this.setState({\n                            todos:this.state.todos.map(todo=>({\n                                ...todo,\n                                complete:this.state.toggleAllComplete\n                            })),\n                            toggleAllComplete:!this.state.toggleAllComplete\n                        })\n                        }\n                    >\n                        toggle all: {`${this.state.toggleAllComplete}`}</button>\n                </div>\n                <TodoForm onSubmit={this.addTodo}/>\n                {todos.map(todo=>(\n                    <Todo\n                        key={todo.id}\n                        toggleComplete={()=>{this.toggleComplete(todo.id)}}\n                        todo={todo}\n                        onDelete={()=>this.handleDeleteTodo(todo.id)}\n                    />\n                ))}\n                <hr/>\n                <div className=\"todos-left\">\n                    todos left: {this.state.todos.filter(todo=>!todo.complete).length}\n                </div>\n                {\n                    (this.state.todos.some(todo=>todo.complete))?(<div>\n                        <button onClick={this.removeAllTodosThatAreComplete}>romove all complete todos</button>\n                    </div>):\"\"\n                }\n            \n            \n            <div>\n            </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {FaGithub,FaLinkedinIn,FaTwitter,FaMedium} from 'react-icons/fa';\nexport default function Contact(){\n    return(\n        <div>\n            <div className=\"icons\">\n                <a className=\"icon\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/afroz23\"><FaGithub/></a>\n                <a className=\"icon\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/afrozquraishi/\"><FaLinkedinIn/></a>\n                <a className=\"icon\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/AfrozQuraishi_\"><FaTwitter/></a>\n                <a className=\"icon\" target=\"_blank\" rel=\"noopener noreferrer\"href=\"https://afroziiitian.medium.com/\"><FaMedium/></a>\n            </div>\n        </div>\n    );\n}","import {React,Component} from 'react';\nimport TodoList from './Components/TodoList';\nimport './App.css';\nimport Contact from './Components/Contact';\nexport default class App extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">Todo list</h1>\n        <div className=\"todolist\">\n          <TodoList/>\n        </div>\n        <a className=\"github-repo\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/afroz23/Todo-App\">Github Repo</a>\n        <Contact/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}